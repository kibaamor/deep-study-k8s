apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-statefulset
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-service
  replicas: 3
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
        - name: mysql-setup
          projected:
            sources:
              - configMap:
                  name: mysql-configmap
        - emptyDir: {}
          name: mysql-init
        - emptyDir: {}
          name: mysql-conf
      initContainers:
        - name: init-mysql
          image: mysql:8.0.28
          env:
            - name: MASTER_HOST
              value: mysql-statefulset-0.mysql-service
            - name: REPL_USER
              valueFrom:
                secretKeyRef:
                  key: repl_user
                  name: mysql-secret
            - name: REPL_PASS
              valueFrom:
                secretKeyRef:
                  key: repl_pass
                  name: mysql-secret
          volumeMounts:
            - mountPath: /mysql-setup
              name: mysql-setup
              readOnly: true
            - mountPath: /mysql-init
              name: mysql-init
            - mountPath: /mysql-conf
              name: mysql-conf
          command:
            - bash
            - -c
            - |
              set -ex

              # copy common mysql config
              cp /mysql-setup/common.cnf /mysql-conf

              # get server-id from 'hostname'
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              echo [mysqld] > /mysql-conf/server-id.cnf
              # server-id has a special meaning when it is equal to 0, so skip it by add 100
              echo server-id=$((100 + $ordinal)) >> /mysql-conf/server-id.cnf

              if [[ $ordinal -eq 0 ]]; then
                # master node
                cp /mysql-setup/create_sync_user.sql /mysql-init
              else
                # slave node
                cp /mysql-setup/start_slave.sql /mysql-init
              fi

              pushd /mysql-init
              for f in $(ls /mysql-init);
              do
                sed -i 's/<MASTER_HOST>/'"$MASTER_HOST"'/g' $f
                sed -i 's/<REPL_USER>/'"$REPL_USER"'/g' $f
                sed -i 's/<REPL_PASS>/'"$REPL_PASS"'/g' $f
                cat $f
              done
              popd
      containers:
      - name: mysql
        image: mysql:8.0.28
        ports:
        - containerPort: 3306
          name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: root_pass
                name: mysql-secret
          - name: LANG
            value: en_US.UTF-8
          - name: TZ
            value: Asia/Shanghai
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: mysql-init
        - mountPath: /etc/mysql/conf.d
          name: mysql-conf
        - mountPath: /var/lib/mysql
          name: mysql-data
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
